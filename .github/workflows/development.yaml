name: Projet Symfony CI

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: gnp-formation2024
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --password=${{ secrets.MYSQL_ROOT_PASSWORD }}"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip
          tools: composer:v2
          coverage: none

      - name: Install Symfony CLI
        run: |
          wget https://get.symfony.com/cli/installer -O - | bash
          echo "$HOME/.symfony/bin" >> $GITHUB_PATH

      - name: Cache Composer Dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Check Symfony Requirements
        run: symfony check:requirements

      - name: Build and start containers using Docker Compose
        run: docker-compose up -d --build

      - name: Run tests through Docker Compose
        run: |
          docker-compose exec web ./vendor/bin/phpunit
          if [ $? -ne 0 ]; then
            echo "Tests failed"
            exit 1
          fi

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/development' 
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: teamflp/gnp-formation:latest
          load: true

      - name: Check container health
        run: docker-compose ps

      - name: Stop and Remove Docker containers
        run: docker-compose down --volumes
